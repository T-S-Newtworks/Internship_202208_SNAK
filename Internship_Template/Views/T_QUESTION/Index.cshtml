@model Internship_Template.Models.VM.質問画面

@{
    ViewBag.Title = "Index";
}
@Styles.Render("~/Content/common")

<script>
    function Create() {
        //var area = document.createElement('div');
        //area.id = ''
        //area.innerHTML = '追加された要素です。';
        //var parent = document.getElementById('parent');
        //parent.appendChild(area);
        var value = $('#button2').val();
        value = Number(value) + 1;
         $(":hidden[id='question " +value + "']").removeAttr('hidden');
        $('#button2').val(value);
    }

    function CreateOption(e) {
        var value = e.value;
        $(":hidden[id='" + value + "']").removeAttr('hidden');
    }

</script>

<style>
    .s100.avatar {
        width: 100px;
        height: 100px;
    }

    .homeContent {
        width: 80%;
        margin-left: auto;
        margin-right: auto;
        min-width: 850px;
    }

    .contentBody {
        padding-top: 30px;
        padding-bottom: 30px;
        display: flex;
    }

    .leftContent {
        width: 65%;
        margin-right: 1.5rem;
    }

    .rightContent {
        width: 35%;
    }

    .vacant2 {
        height: 2rem;
    }

    .vacant1 {
        height: 1rem;
    }

    .card > .content-list > li {
        padding: 10px 16px;
    }

    .content-list.members-list li {
        display: flex;
        justify-content: space-between;
    }

    .members-list {
        margin-top: 0.5rem;
        margin-bottom: 0.5rem;
        padding: 0 !important;
    }

    .list-item-name {
        display: flex;
        align-items: center;
    }

    .s60.avatar {
        width: 60px;
        height: 60px;
        margin-right: 10px;
    }

    .member-controls {
        display: flex;
        align-items: center;
    }

    .userState {
        margin: 5px;
    }

    .prepend-left-5 {
        margin-left: 5px;
    }


    .badge-success {
        padding: 4px 5px;
        font-size: 16px;
        font-style: normal;
        font-weight: 400;
        display: inline-block;
        color: #fff;
        background-color: #1aaa55;
    }
</style>

<div class="homeContent">
    <h2>質問作成ページ</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>


    <body>
        @*@int flag=0; *@
        @*<form action="#" method="post">*@
        @for (int i = 0; i < Model.Qestions.Count; i++)
        {
            string visible = string.Empty;
            if (i != 0)
            {
                visible = "hidden";
            }
        <div id="question @i" @visible>
            <p>
                質問<br>
                @Html.TextBoxFor(model => model.Qestions[i].CONTENT)
            </p>
            <div id="@i.1">
                <p>
                    内容
                </p>
                <div style="display:flex; flex-direction:row;">
                    @Html.TextBoxFor(model => model.Qestions[i].OPTION1)
                    <button value="@i.2" id="optbutton" onclick="CreateOption(this)">
                        追加
                    </button>
                </div>
            </div>
            <div hidden id="@i.2">
                <p>
                    内容
                </p>
                <div style="display:flex; flex-direction:row;">
                    @Html.TextBoxFor(model => model.Qestions[i].OPTION2)
                    <button value="@i.3" id="optbutton" onclick="CreateOption(this)">
                        追加
                    </button>
                </div>

            </div>
            <div hidden id="@i.3">
                <p>
                    内容
                </p>
                <div style="display:flex; flex-direction:row;">
                    @Html.TextBoxFor(model => model.Qestions[i].OPTION3)
                    <button value="@i.4" id="optbutton" onclick="CreateOption(this)">
                        追加
                    </button>
                </div>

            </div>
            <div hidden id="@i.4">
                <p>
                    内容
                </p>
                <div style="display:flex; flex-direction:row;">
                    @Html.TextBoxFor(model => model.Qestions[i].OPTION4)
                    <button value="@i.5" id="optbutton" onclick="CreateOption(this)">
                        追加
                    </button>
                </div>

            </div>
            <div hidden id="@i.5">
                <p>
                    内容
                </p>
                <div style="display:flex; flex-direction:row;">
                    @Html.TextBoxFor(model => model.Qestions[i].OPTION5)
                </div>

            </div>

        </div>
        }
        <p>
            <button value="0" id="button2" onclick="Create()">
                追加
            </button>
        </p>   @*ボタンを押したらtextboxの追加*@
        <div id="parent"></div>

        <p><input type="button" value="作成" id="button3" /></p>
        @*</form>*@
    </body>

</div>